// @generated by Thrift for thrift/compiler/test/fixtures/basic/src/module.thrift
// This file is probably not the place you want to edit!

#![allow(non_camel_case_types, non_snake_case, non_upper_case_globals, unused_crate_dependencies)]

pub use ::::mock::FooService;
pub use ::::mock::FB303Service;
pub use ::::mock::MyService;
pub use ::::mock::DbMixedStackArguments;

pub fn new<'mock, Client>() -> Client::Mock<'mock>
where
    Client: ?::std::marker::Sized + DynClient,
{
    Client::mock()
}

pub trait DynClient {
    type Mock<'mock>;
    fn mock<'mock>() -> Self::Mock<'mock>;
}

impl crate::DynClient for dyn ::::FooService {
    type Mock<'mock> = ::::mock::FooService::<'mock>;
    fn mock<'mock>() -> Self::Mock<'mock> {
        <dyn ::::FooService>::mock()
    }
}
impl crate::DynClient for dyn ::::FB303Service {
    type Mock<'mock> = ::::mock::FB303Service::<'mock>;
    fn mock<'mock>() -> Self::Mock<'mock> {
        <dyn ::::FB303Service>::mock()
    }
}
impl crate::DynClient for dyn ::::MyService {
    type Mock<'mock> = ::::mock::MyService::<'mock>;
    fn mock<'mock>() -> Self::Mock<'mock> {
        <dyn ::::MyService>::mock()
    }
}
impl crate::DynClient for dyn ::::DbMixedStackArguments {
    type Mock<'mock> = ::::mock::DbMixedStackArguments::<'mock>;
    fn mock<'mock>() -> Self::Mock<'mock> {
        <dyn ::::DbMixedStackArguments>::mock()
    }
}
